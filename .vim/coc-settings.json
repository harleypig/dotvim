{
  //-------------------------------------------------------------------------
  // Let ALE handle formatting
  // Diagnostics are displayed by ALE instead of CoC.
  "diagnostic.displayByAle": true,
  // Enables virtual text diagnostics.
  "diagnostic.virtualText": true,
  // Shows virtual text diagnostics only on the current line.
  "diagnostic.virtualTextCurrentLineOnly": true,
  // Sets the format for virtual text diagnostics.
  "diagnostic.virtualTextFormat": " >>> %severity: %message {%source}",

  // Enables auto-update of the current function symbol.
  "coc.preferences.currentFunctionSymbolAutoUpdate": true,
  // Sets the extension update check to daily.
  "coc.preferences.extensionUpdateCheck": "daily",
  // Disables automatic formatting on save.
  "coc.preferences.formatOnSave": false,
  // Don't use quickfix for locations.
  "coc.preferences.useQuickfixForLocations": false,

  // Enables colors.
  "colors.enable": true,

  // Aligns columns in lists.
  "list.alignColumns": true,

  // Enables status line progress notifications.
  "notification.statusLineProgress": true,

  // Disables signature help.
  "signature.enable": false,

  //-------------------------------------------------------------------------
  // Configuration for ansible-lint
  // https://ansible.readthedocs.io/projects/language-server/settings/
  "ansible.ansible.useFullyQualifiedCollectionNames": false,

  //-------------------------------------------------------------------------
  // coc-sh settings
  //"bashIde.enableSourceErrorDiagnostic": true,

  //-------------------------------------------------------------------------
  // coc-spell-checker settings
  // https://github.com/iamcco/coc-spell-checker

//  "cSpell.enabled": true,
//  "cSpell.showStatus": true,
//  "cSpell.enabledLanguageIds": [
//    "asciidoc",
//    "bash",
//    "c",
//    "cpp",
//    "csharp",
//    "css",
//    "dockerfile",
//    "go",
//    "haskell",
//    "html",
//    "java",
//    "javascript",
//    "javascriptreact",
//    "json",
//    "latex",
//    "less",
//    "lua",
//    "markdown",
//    "php",
//    "plaintext",
//    "python",
//    "r",
//    "ruby",
//    "rust",
//    "scss",
//    "sh",
//    "sql",
//    "swift",
//    "tex",
//    "typescript",
//    "typescriptreact",
//    "vim",
//    "vue",
//    "xml",
//    "yaml"
//  ],
//
//  "cSpell.languageSettings": [
//    // Python
//    {
//      "languageId": "python",
//      "includeRegExpList": [
//        "strings",
//        "comments",
//      ]
//    },
//
//    // Shell
//    {
//      "languageId": "sh",
//      "includeRegExpList": [
//        "/#.*/",
//        "strings",
//      ]
//    },
//  ],

  //-------------------------------------------------------------------------
  // Pyright settings
  // https://github.com/fannheyward/coc-pyright
  // https://github.com/microsoft/pyright
  // https://microsoft.github.io/pyright
  // look in pyrightconfig.json or pyproject.toml for more settings

  "pyright.inlayHints.functionReturnTypes": false,
  "pyright.inlayHints.variableTypes": false,

  //-------------------------------------------------------------------------
  // coc-pyright flake8
  "python.linting.flake8Enabled": true,
  "python.linting.flake8Stdin": true,

  //-------------------------------------------------------------------------
  // Requires proselint be installed
  "diagnostic-languageserver.linters": {
    "proselint": {
      "args": ["--config", "$HOME/.vim/.proselint-config.json", "-"],
      "command": "proselint",
      "debounce": 100,
      "formatLines": 1,
      "formatPattern": [
        "^[^:]+:(\\d+):(\\d+):(\\s)(.*)$",
        {
          "column": 2,
          "line": 1,
          "message": 4,
          "security": 3
        }
      ],
      "isStderr": false,
      "isStdout": true,
      "offsetColumn": 0,
      "offsetLine": 0,
      "securities": {
        " ": "info"
      },
      "sourceName": "proselint"
    }
  },

  "diagnostic-languageserver.filetypes": {
    "text": ["proselint"]
  },

  //-------------------------------------------------------------------------
  "languageserver": {
    "vimls": {
      "command": "vim-language-server",
      "args": ["--stdio"],
      "filetypes": ["vim"],
//      "initializationOptions": {
//        "iskeyword": "@,48-57,_,192-255,-#",
//        "vimruntime": "",
//        "runtimepath": "",
//        "diagnostic": {
//          "enable": true
//        },
//        "indexes": {
//          "runtimepath": true,
//          "gap": 100,
//          "count": 3,
//          "projectRootPatterns": ["runtime", "nvim", ".git", "autoload", "plugin"]
//        },
//        "suggest": {
//          "fromVimruntime": true,
//          "fromRuntimepath": false
//        }
//      }
    },
    // Requires docker-langserver be installed
    "dockerfile": {
      "args": ["--stdio"],
      "command": "docker-langserver",
      "filetypes": ["dockerfile"]
    },

    // Requires terraform-ls be installed
    "terraform": {
      "args": ["serve"],
      "command": "terraform-ls",
      "filetypes": ["terraform", "tf"],
      "initializationOptions": {},
      "settings": {
        "indexing.ignorePaths": [".aider.*"],
        // "terraform.logFilePath": "/path/to/logfile",
        // "terraform.timeout": "30s",
        // "terraform.path": "/path/to/terraform",
        // "indexing.ignorePaths": ["path/to/ignore"],
        // "indexing.ignoreDirectoryNames": ["dir1", "dir2"],
        // "commandPrefix": "string",
        // "ignoreSingleFileWarning": true,
        // "experimentalFeatures.validateOnSave": true,
        // "experimentalFeatures.prefillRequiredFields": true,
        // "validation.enableEnhancedValidation": true
      }
    }
//   },
//
//   "markdownlint.config": {
//     "default": true,
//     "line-length": false
//   }
  },
}
